---
export interface Props {
  id: string;
  type: "success" | "error";
  title: string;
  message?: string;
  buttonText: string;
}

const { id, type, title, message, buttonText } = Astro.props;

const iconColor = type === "success" ? "text-green-500" : "text-red-500";
const bgColor = type === "success" ? "bg-green-100" : "bg-red-100";
const buttonColor =
  type === "success"
    ? "bg-green-500 hover:bg-green-600"
    : "bg-red-500 hover:bg-red-600";

const successIcon = `
  <svg class="w-8 h-8 ${iconColor}" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
  </svg>
`;

const errorIcon = `
  <svg class="w-8 h-8 ${iconColor}" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
  </svg>
`;
---

<div
  id={id}
  class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden items-center justify-center p-4 transition-all duration-300"
  data-modal
>
  <div
    class="bg-white rounded-2xl max-w-md w-full mx-4 overflow-hidden transform transition-all duration-300 scale-95 modal-content"
  >
    <div class="p-6 text-center">
      <div
        class={`w-16 h-16 mx-auto mb-4 ${bgColor} rounded-full flex items-center justify-center`}
      >
        <Fragment set:html={type === "success" ? successIcon : errorIcon} />
      </div>
      <h3 class="text-xl font-bold text-gray-900 mb-2">{title}</h3>
      <p id={`${id}-message`} class="text-gray-600 mb-6">
        {message || ""}
      </p>
      <button
        id={`close-${id}`}
        class={`w-full ${buttonColor} text-white font-semibold py-2 px-4 rounded-xl transition-colors duration-200`}
        data-close-modal={id}
      >
        {buttonText}
      </button>
    </div>
  </div>
</div>

<style>
  [data-modal].flex .modal-content {
    @apply scale-100;
  }
</style>
